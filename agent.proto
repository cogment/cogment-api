// Copyright 2020 Artificial Intelligence Redefined <dev+cogment@ai-r.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package cogment;

import "cogment/api/common.proto";

// This is the connection between a model application and the orchestrator.
// The service is hosted on the model.
service AgentEndpoint {
  rpc Start(AgentStartRequest) returns (AgentStartReply) {}

  rpc Decide(stream AgentDataRequest) returns (stream AgentActionReply) {}

  rpc End(AgentEndRequest) returns (AgentEndReply) {}
  rpc Reward(AgentRewardRequest) returns (AgentRewardReply) {}
  rpc Version(VersionRequest) returns (VersionInfo) {}
}


message AgentStartRequest {
  string actor_class = 1;
  string impl_name = 2;
  string name = 3;

  ActorConfig config = 4;

  TrialConfig trial_config = 5;

  // One entry per actor, defining that actor's class
  repeated int32 actor_class_idx = 6;
  repeated string actor_names = 7;
}

message AgentStartReply {}

message AgentEndRequest {
}

message AgentEndReply {}

message AgentDataRequest {
  Observation observation = 1;
  bool final = 2;
}

message AgentActionReply {
  Action action = 1;
  repeated Feedback feedbacks = 2;
}

message Reward {
  float value = 1;
  float confidence = 2;

  // The individual feedbacks that were used to generate the reward.
  repeated Feedback feedbacks = 3;
}

message AgentRewardRequest {
  int32 tick_id = 4;

  Reward reward = 3;
}

message AgentRewardReply {}
